spring.application.name=gateway
server.port=8080

# Configuración básica de Eureka
eureka.client.serviceUrl.defaultZone=http://server:8761/eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.enabled=true

# IMPORTANTE: Decidir entre usar hostname o IP, no ambos
# Opción 1: Usar IP (recomendado para Docker)
#eureka.instance.prefer-ip-address=true
#SSeureka.instance.instance-id=${spring.cloud.client.ip-address}:${server.port}
# Eliminar estas propiedades si usas IP:
eureka.instance.homePageUrl=http://${HOST_IP:localhost}:8080/
eureka.instance.statusPageUrl=http://${HOST_IP:localhost}:8080/
eureka.instance.hostname=${HOST_IP:localhost}

# Configuración crítica para la estabilidad del registro
eureka.instance.lease-renewal-interval-in-seconds=10
eureka.instance.lease-expiration-duration-in-seconds=90  
eureka.client.healthcheck.enabled=true

# Configuración para evitar timeouts
eureka.client.eureka-server-connect-timeout-seconds=60
eureka.client.eureka-server-read-timeout-seconds=60
eureka.client.registry-fetch-interval-seconds=30

# Replicación y reintentos
eureka.client.initial-instance-info-replication-interval-seconds=40 
eureka.client.instance-info-replication-interval-seconds=40 

# Configuración de Spring Actuator (necesaria para healthcheck)
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

# Rutas del gateway (mantener igual)
spring.cloud.gateway.routes[0].id=login-service
spring.cloud.gateway.routes[0].uri=http://login:8081
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/auth/**, /api/users/**

spring.cloud.gateway.routes[1].id=actividades-service
spring.cloud.gateway.routes[1].uri=http://actividades:8082
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/actividades/**, /api/incentivos/**

spring.cloud.gateway.routes[2].id=socios-service
spring.cloud.gateway.routes[2].uri=http://socios:8083
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/agents/**

spring.cloud.gateway.routes[3].id=sociosexcel-service
spring.cloud.gateway.routes[3].uri=http://sociosexcel:8084
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/socios/**

spring.cloud.gateway.routes[4].id=registros-service
spring.cloud.gateway.routes[4].uri=http://registros:8085
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/registros/**

# Configuración CORS (mantener igual)
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=http://localhost:80,http://localhost,http://frontend:80,http://frontend
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=GET,POST,PUT,DELETE,PATCH,OPTIONS
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowCredentials=true